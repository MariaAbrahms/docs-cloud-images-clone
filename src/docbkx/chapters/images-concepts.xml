<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE application [<!ENTITY % common  SYSTEM "../../common/common.ent">
%common;]>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="ch_image-concepts">
    <title>Concepts</title>
    <!--    <?dbhtml stop-chunking?>-->
    <para>To take advantage of the &CImS;, it is helpful to be familiar with the concepts outlined in this section.</para>

    <!--Image Entities-->
    <section xml:id="image-entities">
        <title>Image Entities</title>
        <para>An image entity is represented by a <glossterm baseform="JSON">JSON-encoded</glossterm> data structure and its
            raw binary data. </para>
        <para>An image entity has an identifier (ID) that is guaranteed to be unique within its endpoint. The ID is used as a
            token in request <glossterm baseform="URI">URIs</glossterm> to interact with that specific image. </para>
        <para>An image is always guaranteed to have the following attributes: id, status, visibility, protected, tags,
            created_at, file and self. The other attributes defined in the image schema below are guaranteed to be defined,
            but will only be returned with an image entity if they have been explicitly set. </para>
        <para>A client may set arbitrarily-named attributes on their images if the image json-schema allows it. These
            user-defined attributes will appear like any other image attributes.</para>
    </section>

    <!--Image Identifiers-->
    <section xml:id="image-identifiers">
        <title>Image Identifiers</title>
        <para>Images are uniquely identified by a <glossterm>URI</glossterm> that matches the following signature:</para>
        <para><code>{image server location}/v2/images/{image_ID}</code></para>
        <para>
            <variablelist>
                <varlistentry>
                    <term><code>{image server location}</code></term>
                    <listitem>
                        <para>The resource location of the &CImS; that knows about an image</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><code>{image_ID}</code></term>
                    <listitem>
                        <para>The image identifier, which is a <glossterm>UUID</glossterm>, making it globally unique</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </para>
    </section>

    <!--Image Tasks-->
    <section xml:id="image-tasks">
        <title>Image Tasks (Importing and Exporting Images)</title>
        <para>A <glossterm baseform="JSON">image task</glossterm> is a request to perform an asynchronous image-related
            operation, such as importing or exporting an image. The request results in the creation of a task resource that
            can be polled for information about the status of the operation.</para>
        <para>The task resource includes an expiration time and date stamp. After the time in the stamp, the task resource
            will expire. However, the result of the task, such as an imported image, will not expire.</para>
        <para>A task request to import an image is necessary to give you cloud provider access to your image so that the
            provider can make the image suitable for booting in its cloud.</para>
        <para>To import an image, do the following: <orderedlist>
                <listitem>
                    <para>Put the image in a cloud storage account, since the cloud storage accounts are designed to handle
                        large volumes of data uploading from connections of varying bandwidth.</para>
                </listitem>
                <listitem>
                    <para> Submit the import request (see <olink targetdoc="ci-devguide"
                            targetptr="POST_taskImport_v2_tasks_Image_Task_Calls"
                            >POST_taskImport_v2_tasks_Image_Task_Calls</olink>).</para>
                </listitem>
                <listitem>
                    <para>The &CImS; will fetch the image from your cloud storage, do the processing requored by the cloud
                        provider for use in its cloud, and create a new image for you</para>
                </listitem>
            </orderedlist>
        </para>
        <para>To export an image, do the following:<orderedlist>
                <listitem>
                    <para> Determine the UUID of the image you want to export.</para>
                </listitem>
                <listitem>
                    <para>Submit the export request (see <olink targetdoc="ci-devguide"
                            targetptr="POST_taskExport_v2_tasks_Image_Task_Calls"
                            >POST_taskExport_v2_tasks_Image_Task_Calls</olink>).</para>
                </listitem>
                <listitem>
                    <para>The &CImS; removes provider-specific information from the image, converts it to a standard
                        interchange format, and transfers the exported image to your cloud storage account.</para>
                </listitem>
            </orderedlist>
        </para>

        <!--Task Statuses-->
        <section xml:id="task-statuses">
            <title>Task Statuses</title>
            <para>Image Tasks in the &CImS; can have one of the following statuses when polled:</para>
            <variablelist>
                <varlistentry>
                    <term><emphasis role="bold">pending</emphasis></term>
                    <listitem>
                        <para> The image task is waiting for execution.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">processing</emphasis></term>
                    <listitem>
                        <para> The image task is processing.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">successful</emphasis></term>
                    <listitem>
                        <para>The image task completed successfully.</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">failed</emphasis></term>
                    <listitem>
                        <para>The image task completed unsuccessfully.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
    </section>

    <!--Disk and Container Formats-->
    <section xml:id="disk-container-formats">
        <title>Disk and Container Formats</title>
        <para>When adding an image to Cloud Images, you can specify the image's <emphasis role="italic">disk
                format</emphasis> and the <emphasis role="italic">container format</emphasis>. These formats are configurable
            for each image and are defined in the following sections.</para>

        <!--Disk Format-->
        <section xml:id="disk-format">
            <title>Disk Formats</title>
            <para>The disk format of a virtual machine image is the format of the underlying disk image. Virtual appliance
                vendors have different formats for laying out the information contained in a virtual machine image.</para>
            <para>You can set your image's disk format to <!--one of--> the following type<!--s-->:</para>
            <variablelist>
                <!-- Per Brian, only supported type at launch is vhd -->
                <!--                <varlistentry>
                    <term><emphasis role="bold">raw</emphasis></term>
                    <listitem>
                        <para>An unstructured disk format, natively supported by both <glossterm>KVM</glossterm> and
                                <glossterm>Xen</glossterm>
                            <glossterm baseform="Hypervisor">hypervisors</glossterm></para>
                    </listitem>
                </varlistentry>-->
                <varlistentry>
                    <term><emphasis role="bold">vhd</emphasis></term>
                    <listitem>
                        <para>A common disk format used by <glossterm baseform="Virtual Machine Monitor">virtual machine
                                monitors</glossterm> from VMware, Xen, Microsoft, VirtualBox, and others</para>
                    </listitem>
                </varlistentry>
                <!--<varlistentry>
                    <term><emphasis role="bold">vmdk</emphasis></term>
                    <listitem>
                        <para>A common disk format supported by many common <glossterm baseform="Virtual Machine Monitor"
                                >virtual machine monitors</glossterm></para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">vdi</emphasis></term>
                    <listitem>
                        <para>A disk format supported by VirtualBox <glossterm baseform="Virtual Machine Monitor">virtual
                                machine monitor</glossterm> and the <glossterm>QEMU</glossterm> emulator</para>
                        <note>
                            <para>None of the Rackspace Cloud Server <glossterm baseform="Hypervisor">hypervisors</glossterm>
                                support VDI directly, so you should convert the images to a different format for use with
                                Cloud Images.</para>
                        </note>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">iso</emphasis></term>
                    <listitem>
                        <para>An archive format for the data contents of an optical disc like a CD or DVD</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">qcow2</emphasis></term>
                    <listitem>
                        <para>A disk format, supported by the <glossterm>QEMU</glossterm> emulator, that
                            can expand dynamically, supports copy-on-write, supports snapshots, and is commonly used with the
                                <glossterm>KVM</glossterm>
                            <glossterm baseform="Hypervisor">hypervisor</glossterm></para>
                        <note>
                            <para>Because <emphasis role="bold">qcow2</emphasis> uses sparse representation (resulting in a
                                smaller image), it is often faster to convert a raw image to qcow2 and upload it than to
                                upload the raw file.</para>
                        </note>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">aki</emphasis></term>
                    <listitem>
                        <para>An Amazon kernel image (AKI) that the <glossterm baseform="Hypervisor">hypervisor</glossterm>
                            initially loads to boot (start up) the image</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">ari</emphasis></term>
                    <listitem>
                        <para>An Amazon ramdisk image (ARI) mounted at boot (startup) time</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">ami</emphasis></term>
                    <listitem>
                        <para>An Amazon machine image (AMI) in raw format</para>
                    </listitem>
                </varlistentry>-->
            </variablelist>
            <note>
                <para>There are other formats, but vhd is currently the only supported format in &CImS;.</para>
            </note>
        </section>

        <!--Container Format-->
        <section xml:id="container-format">
            <title>Container Formats</title>
            <para>The container format refers to whether the virtual machine image is in a file format that also contains
                metadata about the actual virtual machine.</para>
            <note>
                <para>The container format string is not currently used by Cloud Images or other components based on
                    OpenStack, so it is safe to specify <emphasis role="bold">bare</emphasis> as the container format, if you
                    are unsure.</para>
            </note>
            <para>You can set your image's container format to <!--one of--> the following type<!--s-->:</para>
            <variablelist>
                <!-- Only supported format is ovf at launch, per Brian-->
                <!--                <varlistentry>
                    <term><emphasis role="bold">bare</emphasis></term>
                    <listitem>
                        <para>No container or metadata envelope for the image</para>
                    </listitem>
                </varlistentry>-->
                <varlistentry>
                    <term><emphasis role="bold">ovf</emphasis></term>
                    <listitem>
                        <para>Open Virtualization Format (OVF) container format, an open-source standard for packaging and
                            distributing software and applications for virtual machines</para>
                    </listitem>
                </varlistentry>
                <!--                <varlistentry>
                    <term><emphasis role="bold">aki</emphasis></term>
                    <listitem>
                        <para>An Amazon kernel image (AKI)</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">ari</emphasis></term>
                    <listitem>
                        <para>An Amazon ramdisk image (ARI)</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">ami</emphasis></term>
                    <listitem>
                        <para>An Amazon machine image (AMI)</para>
                    </listitem>
                </varlistentry>-->
            </variablelist>
            <note>
                <para>There are other formats, but ovf is currently the only supported format in &CImS;.</para>
            </note>
        </section>
    </section>

    <!--Common Image Properties-->
    <section xml:id="common-image-properties">
        <title>Common Image Properties</title>
        <para> To help end users use your images, you can put additional common properties, or metadata, on your images. </para>
        <para>The available properties and their expected values include the following options:</para>
        <glosslist>
            <!-- Per Brian, at launch only valid properties are os-distro and os-version -->
            <!--            <glossentry>
                
                <glossterm><emphasis role="bold">architecture</emphasis></glossterm>
                <glossdef>
                    <para>The CPU architecture that must be supported by the <glossterm baseform="Hypervisor"
                            >hypervisor</glossterm>. Run <code>uname -m</code> to get the architecture of your machine.
                        Allowed values are as follows:</para>
                    <variablelist>
                        <varlistentry>
                            <term><emphasis role="bold">alpha</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/DEC_Alpha">DEC 64-bit RISC</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">armv71</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/ARM_architecture">ARM Cortex-A7 MPCore</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">cris</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/ETRAX_CRIS">Ethernet, Token Ring, AXis - Code Reduced Instruction Set</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">i686</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/X86">Intel sixth-generation x86</link>(P6
                                    microarchitecture)</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">ia64</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/Itanium">Itanium</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">lm32</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/Milkymist">Lattice Micro32</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">m68k</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/Motorola_68000_family">Motorola 68000</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">microblaze</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/MicroBlaze">Xilinx 32-bit FPGA (Big Endian)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">microblazeel</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/MicroBlaze">Xilinx 32-bit FPGA (Little Endian)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">mips</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/MIPS_architecture">MIPS 32-bit RISC (Big Endian)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">mipsel</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/MIPS_architecture">MIPS 32-bit RISC (Little Endian)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">mips64</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/MIPS_architecture">MIPS 64-bit RISC (Big Endian)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">mips64el</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/MIPS_architecture">MIPS 64-bit RISC (Little Endian)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">openrisc</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/OpenRISC#QEMU_support">OpenCores RISC</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">parisc</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/PA-RISC">HP Precision Architecture RISC</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">parisc64</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/PA-RISC">HP Precision Architecture 64-bit RISC</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">ppc</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/PowerPC">PowerPC 32-bit</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">ppc64</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/PowerPC">PowerPC 64-bit</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">ppcemb</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/PowerPC">PowerPC (Embedded 32-bit)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">s390</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/S390">IBM Systems Enterprise Architecture/390</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">s390x</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/S390x">S/390 64-bit</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">sh4</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/SuperH">SuperH SH-4 (Little Endian)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">sh4eb</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/SuperH">SuperH SH-4 (Big Endian)</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">sparc</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/Sparc">Scalable Process Architecture, 32-bit</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">sparc64</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/Sparc">Scalable Process Architecture, 64-bit</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">unicore32</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/Unicore">Microprocessor Research and Development Center Unicore 32-bit RISC</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">x86_64</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/X86">64-bit extension of IA-32</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">xtensa</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/Xtensa#Processor_Cores">Tensilica Xtensa configurable microprocessor core</link></para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">xtensaeb</emphasis></term>
                            <listitem>
                                <para><link xlink:href="http://en.wikipedia.org/wiki/Xtensa#Processor_Cores">Tensilica Xtensa configurable microprocessor core (Big Endian)</link></para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </glossdef>
            </glossentry>
            <glossentry>
                <glossterm baseform="UUID"><emphasis role="bold">instance_uuid</emphasis></glossterm>
                <glossdef>
                    <para>The ID of an instance used to create an image</para>
                </glossdef>
            </glossentry>
            <glossentry>
                <glossterm><emphasis role="bold">kernel_id</emphasis></glossterm>
                <glossdef>
                    <para>The ID of an image stored in Cloud Images that should be used as the kernel when booting (starting
                        up) an AMI-style image</para>
                </glossdef>
            </glossentry>
            <glossentry>
                <glossterm><emphasis role="bold">ramdisk_id</emphasis></glossterm>
                <glossdef>
                    <para>The ID of image stored in Cloud Images that should be used as the ramdisk when booting (starting
                        up) an AMI-style image</para>
                </glossdef>
            </glossentry>-->
            <glossentry>
                <glossterm><emphasis role="bold">os_distro</emphasis></glossterm>
                <glossdef>
                    <para>The common name of the operating system distribution</para>
                    <important>
                        <para>The common name must be all lowercase and entered exactly as shown here.</para>
                    </important>
                    <para>The allowed values are as follows:</para>
                    <variablelist>
                        <varlistentry>
                            <term><emphasis role="bold">arch</emphasis></term>
                            <listitem>
                                <para>Arch Linux</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">centos</emphasis></term>
                            <listitem>
                                <para>Community Enterprise Operating System</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">debian</emphasis></term>
                            <listitem>
                                <para>Debian</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">fedora</emphasis></term>
                            <listitem>
                                <para>Fedora</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">freebsd</emphasis></term>
                            <listitem>
                                <para>FreeBSD</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">gentoo</emphasis></term>
                            <listitem>
                                <para>Gentoo Linux</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">mandrake</emphasis></term>
                            <listitem>
                                <para>Mandrakelinux (MandrakeSoft)</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">mandriva</emphasis></term>
                            <listitem>
                                <para>Mandriva Linux</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">mes</emphasis></term>
                            <listitem>
                                <para>Mandriva Enterprise Server</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">msdos</emphasis></term>
                            <listitem>
                                <para>Microsoft Disk Operating System</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">netbsd</emphasis></term>
                            <listitem>
                                <para>NetBSD</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">netware</emphasis></term>
                            <listitem>
                                <para>Novell NetWare</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">openbsd</emphasis></term>
                            <listitem>
                                <para>OpenBSD</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">opensolaris</emphasis></term>
                            <listitem>
                                <para>OpenSolaris</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">opensuse</emphasis></term>
                            <listitem>
                                <para>openSUSE</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">rhel</emphasis></term>
                            <listitem>
                                <para>Red Hat Enterprise Linux</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">sled</emphasis></term>
                            <listitem>
                                <para>SUSE Linux Enterprise Desktop</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">ubuntu</emphasis></term>
                            <listitem>
                                <para>Ubuntu</para>
                            </listitem>
                        </varlistentry>
                        <varlistentry>
                            <term><emphasis role="bold">windows</emphasis></term>
                            <listitem>
                                <para>Microsoft Windows</para>
                            </listitem>
                        </varlistentry>
                    </variablelist>
                </glossdef>
            </glossentry>
            <glossentry>
                <glossterm><emphasis role="bold">os_version</emphasis></glossterm>
                <glossdef>
                    <para>The operating system version as specified by the distributor</para>
                </glossdef>
            </glossentry>
        </glosslist>
    </section>

    <!-- HTTP PATCH Method -->
    <section xml:id="patch-method">
        <title>HTTP PATCH Method</title>
        <para>The &CImA; uses the HTTP PATCH method to update image properties.</para>
        <para>The HTTP PATCH request must provide a <glossterm baseform="Media type">media type</glossterm> so that the
            server can determine how the changes should be applied to an image resource. An unsupported media type results in
            an <errorcode>HTTP 415</errorcode> error code. For image resources, the supported media types for PATCH requests
            are as follows: <itemizedlist>
                <listitem>
                    <para><code>'application/openstack-images-v2.0-json-patch'</code> - which is deprecated</para>
                </listitem>
                <listitem>
                    <para><code>'application/openstack-images-v2.1-json-patch'</code> - which provides useful and compatible
                        functionality for JSON PATCH and is based on the JavaScript Object Notation (JSON) Patch standard
                        RFC6902
                        (<link xlink:href="http://tools.ietf.org/html/rfc6902">http://tools.ietf.org/html/rfc6902</link>).</para>
                </listitem>
            </itemizedlist>
        </para>
        <note>
            <para>In addition to working with existing image properties, you can use the HTTP PATCH method to add or modify
                user-defined properties, which you create, to make notes on an image. For example, you could add
                    <literal>user_passed_qe</literal> (with a true or false value or a date value) or
                    <literal>user_image_creator</literal> (with a name for the value).</para>
        </note>

        <section xml:id="restricted-json">
            <title>Restricted JSON Pointers</title>
            <para>The <literal>application/openstack-images-v2.1-json-patch</literal>
                <glossterm baseform="Media type">media type</glossterm> adopts a restricted form of <glossterm
                    baseform="JSON Pointer">JSON-Pointers</glossterm>, which limits the number of tokens allowed to one
                token. Restricted JSON Pointers are evaluated as ordinary JSON Pointers.</para>
            <note>
                <para>If a reference token contains a tilde (<emphasis role="bold">~</emphasis> or <literal>(%x7E)</literal>)
                    or a forward slash (<emphasis role="bold">/</emphasis> or <literal>(%x2F)</literal>), encode them as '~0'
                    and '~1' respectively.</para>
                <para>The <glossterm>ABNF</glossterm> syntax is as follows:
                    <programlisting>
restricted-json-pointer = "/" reference-token
reference-token = *( unescaped / escaped )
unescaped = %x00-2E / %x30-7D / %x7F-10FFFF
escaped = "~" ( "0" / "1" )
                    </programlisting>
                </para>
            </note>
            <para>An example of converting image properties to JSON Pointers, which is necessary to use the <code>HTTP
                    PATCH</code> method, is as follows</para>
            <para><guilabel>Image Entity</guilabel>:
                <programlisting>
{
    "id": "da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
    "name": "cirros-0.3.0-x86_64-uec-ramdisk",
    "status": "active",
    "visibility": "public",
    "size": 2254249,
    "checksum": "2cec138d7dae2aa59038ef8c9aec2390",
    "~/.ssh/": "present",
    "tags": ["ping", "pong"],
    "created_at": "2012-08-10T19:23:50Z",
    "updated_at": "2012-08-10T19:23:50Z",
    "self": "/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea",
    "file": "/v2/images/da3b75d9-3f4a-40e7-8a2c-bfab23927dea/file",
    "schema": "/v2/schemas/image"
}             
            </programlisting>
            </para>
            <para><guilabel>Comparison of the JSON Pointer to the Image Entity Key Pair</guilabel>:
                <programlisting>
JSON Pointer        Image Entity Key Pair
 /name          "name":"cirros-0.3.0-x86_64-uec-ramdisk"
 /size          "size":"2254249"             
 /tags          "tags":["ping", "pong"]
 /~0~1.ssh~1    "~/.ssh/":"present"               
            </programlisting>
            </para>
        </section>

        <section xml:id="using-patch">
            <title>Using the HTTP PATCH Method</title>
            <para>The <code>'application/openstack-images-v2.1-json-patch'</code>
                <glossterm baseform="Media type">media type</glossterm> for the HTTP PATCH method allows a subset of
                operations defined in the <literal>application/json-patch+json</literal> media type. To perform an operation,
                you need an operation object that consists of member key pairs. The possible members of an operation object
                are as follows:</para>
            <variablelist>
                <varlistentry>
                    <term><emphasis role="bold">operation</emphasis> member</term>
                    <listitem>
                        <itemizedlist>
                            <listitem>
                                <para>Specified by: <code>"op"</code></para>
                            </listitem>
                            <listitem>
                                <para>Required for all operations</para>
                            </listitem>
                            <listitem>
                                <para>Identifies the type of operation to be performed.</para>
                            </listitem>
                            <listitem>
                                <para>The allowed operations are as follows: <itemizedlist>
                                        <listitem>
                                            <para><olink targetdoc="ci-devguide" targetptr="patch_add">add</olink></para>
                                        </listitem>
                                        <listitem>
                                            <para><olink targetdoc="ci-devguide" targetptr="patch_remove"
                                                >remove</olink></para>
                                        </listitem>
                                        <listitem>
                                            <para><olink targetdoc="ci-devguide" targetptr="patch_replace"
                                                >replace</olink></para>
                                        </listitem>
                                    </itemizedlist>
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">location</emphasis> member</term>
                    <listitem>
                        <itemizedlist>
                            <listitem>
                                <para>Specified by: <code>"path"</code>.</para>
                            </listitem>
                            <listitem>
                                <para>Required for all operations.</para>
                            </listitem>
                            <listitem>
                                <para>Identifies the location within the target image where the requested operation is to be
                                    performed.</para>
                            </listitem>
                            <listitem>
                                <para>The member value is a string that contains a restricted <glossterm>JSON
                                        Pointer</glossterm> value that references the location where the operation is to be
                                    performed within the target image.</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><emphasis role="bold">value</emphasis> member</term>
                    <listitem>
                        <para/>
                        <itemizedlist>
                            <listitem>
                                <para>Specified by: <code>"value"</code></para>
                            </listitem>
                            <listitem>
                                <para>Required for <command>add</command> and <command>replace</command> operations.</para>
                            </listitem>
                            <listitem>
                                <para>Contains the actual value to add (or to use in the replace operation) expressed in JSON
                                    notation. String values are quoted and numeric values are unquoted.</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <warning>
                <para>If an operation object contains no recognized operation member, or more than one operation member, an
                    error condition results.</para>
            </warning>

            <section xml:id="patch_add">
                <title>HTTP PATCH Add Operation</title>
                <para>The <command>add</command> operation adds a new custom user-defined property at a specified path in the
                    target image. The path must reference an image property to add to an existing image. The operation object
                    contains a value member that specifies the value to be added. </para>
                <warning>
                    <para> There is a small subset of standard image properties that can be added by users; please consult
                        the
                        <link xlink:href="http://www.rackspace.com/knowledge_center/">Rackspace Knowledge Center</link>
                        for details. If you try to add any other properties as part of your PATCH request, the request will
                        fail.</para>
                </warning>
                <para><guilabel>Add Example</guilabel></para>
                <programlisting>
{ "op": "add", "path": "/login-name", "value": "kvothe"}                
                </programlisting>
            </section>

            <section xml:id="patch_remove">
                <title>HTTP PATCH Remove Operation</title>
                <para>The <command>remove</command> operation removes the custom user-defined image property from the target
                    image. If no image property exists at the specified location, an error results. </para>
                <warning>
                    <para> Some image properties used by the system are <code>protected</code>. If you try to remove any of
                        these properties as part of your PATCH request, the request will fail.</para>
                </warning>
                <para><guilabel>Remove Example</guilabel></para>
                <programlisting>
{ "op": "remove", "path": "/login-name" }                
                </programlisting>
            </section>
            <section xml:id="patch_replace">
                <title>HTTP PATCH Replace Operation</title>
                <para>The <command>replace</command> operation replaces the value of the specified image property in the
                    target image with a new value. The operation object contains a value member that specifies the
                    replacement value. </para>
                <warning>
                    <para> Some image properties used by the system are <code>protected</code>. If you try to modify any of
                        these properties as part of your PATCH request, the request will fail. There is a small subset of
                        standard image properties that can be modified by users; please consult the
                        <link xlink:href="http://www.rackspace.com/knowledge_center/">Rackspace Knowledge Center</link>
                        for details. </para>
                </warning>
                <para><guilabel>Replace Example</guilabel></para>
                <programlisting>
{  "op": "replace", "path": "/login-name", "value": "kote" }               
                </programlisting>
                <warning>
                    <para>If the specified image property does not exist for the target image, an error condition
                        results.</para>
                </warning>
            </section>
        </section>
    </section>

    <!--Standard vs. Non-standard Images-->
    <section xml:id="stdvnon-images">
        <title>Standard versus Non-standard Images</title>
        <?dbhtml stop-chunking?>
        <para>The &CImS; allows you to use standard images (which are supported by Rackspace) and to create, share, and use
            non-standard images (which are not supported by Rackspace). For more information, see this
            <link xlink:href="http://www.rackspace.com/knowledge_center/article/rackspace-standard-and-non-standard-images"> 
                article.</link>
        </para>
        <section xml:id="std-images">
            <title>Standard Images</title>
            <para>Standard images include the following:</para>
            <itemizedlist>
                <listitem>
                    <para>All base images supplied by Rackspace for your service level and/or Rackconnect status that have
                        not yet reached End of Life</para>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="nonstd-images">
            <title>Non-standard Images</title>
            <para>Non-standard images include the following:</para>
            <itemizedlist>
                <listitem>
                    <para>All imported and exported images</para>
                </listitem>
                <listitem>
                    <para>All end-of-life images</para>
                </listitem>
                <listitem>
                    <para>All shared images</para>
                </listitem>
                <listitem>
                    <para>All images that are not standard for your account's service level and Rackconnect status</para>
                </listitem>
            </itemizedlist>
            <note>
                <para>This is not an exhaustive list of non-standard images.</para>
            </note>
        </section>
    </section>

    <!--Image Statuses-->
    <section xml:id="image-statuses">
        <title>Image Statuses</title>
        <para>Images in the &CImS; can have one of the following statuses:</para>
        <variablelist>
            <varlistentry>
                <term><emphasis role="bold">queued</emphasis></term>
                <listitem>
                    <para> The image identifier has been reserved for an image in the Cloud Images registry. No image data
                        has been uploaded to the &CImS;, and the image size was not explicitly set to zero on creation.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><emphasis role="bold">saving</emphasis></term>
                <listitem>
                    <para> An image's raw data is being uploaded to the &CImS;.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><emphasis role="bold">active</emphasis></term>
                <listitem>
                    <para>The image is fully available in the &CImS;. This status applies either after the image is uploaded
                        or if the image size is explicitly set to zero on creation. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><emphasis role="bold">killed</emphasis></term>
                <listitem>
                    <para>An error occurred during the image upload process, and the image data is unreadable.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><emphasis role="bold">deleted</emphasis></term>
                <listitem>
                    <para>The &CImS; has retained the information about the image, but the image is no longer available to
                        use. An image with this status will be removed automatically at a later date.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term><emphasis role="bold">pending_delete</emphasis></term>
                <listitem>
                    <para>This status is similar to deleted, however, the &CImS; has not yet removed the image data. An image
                        with this status is recoverable.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </section>
</chapter>
