<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [<!ENTITY % common  SYSTEM "../../common/common.ent">
%common;]>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="auth-response-description">
    <title>Authentication Response</title>
    <para>In response to valid credentials, this service returns an authentication token and a service catalog with the
        endpoints that you use to request services. </para>
    <para>Do not include explicit API endpoints in your scripts and applications. Instead, find the endpoint for your service
        and use it. </para>
    <para>The following output shows a partial authentication response in JSON format. <example>
            <title>Authenticate: JSON Response</title>
            <programlistingco>
                <areaspec>
                    <area xml:id="credentials.xml.endpoints" units="linecolumn" coords="37 32"/>
                    <area xml:id="credentials.xml.tenant" units="linecolumn" coords="41 47"/>
                    <area xml:id="credentials.xml.name" units="linecolumn" coords="55 50"/>
                    <area xml:id="credentials.xml.expires" units="linecolumn" coords="61 57"/>
                    <area xml:id="credentials.xml.token" units="linecolumn" coords="62 59"/>

                </areaspec>
                <programlisting language="json"><?db-font-size 55%?><xi:include href="../../common/samples/authv2.json" parse="text"/></programlisting>
            </programlistingco>
        </example>
    </para>
    <para>Successful authentication returns the following information: <calloutlist>
            <callout arearefs="credentials.xml.endpoints">
                <para><emphasis role="bold">Endpoints for requesting Rackspace Cloud services</emphasis> appear in the
                        <code>endpoints</code> element in the <code>serviceCatalog</code> element. </para>
                <para>Endpoint information includes the public URL, which is the endpoint that you use to access the service,
                    region, tenant ID, and version information. </para>
            </callout>
            <callout arearefs="credentials.xml.tenant">
                <para>The <emphasis role="bold">Tenant ID</emphasis> appears in the <literal>tenantId</literal> field in the
                        <literal>endpoints</literal> element. The tennant ID is also known as the account number. </para>
                <para>You include the tenant ID in the endpoint URL when you call a cloud service. </para>
                <para>In the following example, you export the tenant ID, <literal>010101</literal>, to the
                        <literal>account</literal> environment variable and the authentication token to the
                        <literal>token</literal> environment variable. Then, you issue a cURL command, as follows:</para>
                <programlisting language="bash" role="gutter: false"><?db-font-size 60%?><prompt>$</prompt> export account="010101"
<prompt>$</prompt> export token="00000000-0000-0000-000000000000"
<prompt>$</prompt> curl -s https://dfw.servers.api.rackspacecloud.com/v2/$account/images/detail \
     -H "X-Auth-Token: $token" | python -m json.tool</programlisting>
            </callout>
            <callout arearefs="credentials.xml.name">
                <para><emphasis role="bold">The name of the service</emphasis> appears in the <code>name</code> field. </para>
                <para>Locate the correct service name in the service catalog. For example, the service name for Cloud Images
                    is <literal>cloudImages</literal>. </para>
                <para>To access the &CImS;, use the <code>publicURL</code> value for the <literal>cloudImages</literal>
                    service.</para>
                <para>Multiple endpoints might be shown to enable regional choice.Â Select the appropriate endpoint for the
                    region that you want to interact with by examining the <code>region</code> field.</para>
            </callout>
            <callout arearefs="credentials.xml.expires">
                <para><emphasis role="bold">The expiration date and time for the authentication token</emphasis> appear in
                    the <code>expires</code> field in the <code>token</code> element.</para>
                <para>After this date and time, the token is no longer valid. </para>
                <para>This field shows the maximum lifespan for a token, but a token could be manually revoked before it
                    reaches the maximum lifespan. </para>
                <para>Clients are encouraged to cache a token until it expires. </para>
                <para>Because the authentication token expires after 24 hours, you must generate a token once a day. </para>
            </callout>
            <callout arearefs="credentials.xml.token">
                <para><emphasis role="bold">The authentication token</emphasis> appears in the <code>id</code> field in the
                        <code>token</code> element. </para>
                <para>You pass the authentication token in the <code>X-Auth-Token</code> header each time that you send a
                    request to a service. </para>
                <para>In the following example, you export the tenant ID, <literal>010101</literal>, to the
                        <literal>account</literal> environment variable. You also export the authentication token,
                        <literal>00000000-0000-0000-000000000000</literal>, to the <literal>token</literal> environment
                    variable. Then, you issue a cURL command, as
                    follows:<programlisting language="bash" role="gutter: false"><?db-font-size 60%?><prompt>$</prompt> export account="010101"
<prompt>$</prompt> export token="00000000-0000-0000-000000000000"
<prompt>$</prompt> curl -s https://dfw.servers.api.rackspacecloud.com/v2/$account/images/detail \
     -H "X-Auth-Token: $token" | python -m json.tool</programlisting></para>
            </callout>
        </calloutlist></para>
    <?hard-pagebreak?>
</section>
