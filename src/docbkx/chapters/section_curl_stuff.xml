<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE application [<!ENTITY % common  SYSTEM "../../common/common.ent">
%common;]>

<section xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0" xml:id="curl_stuff">
    <title>How cURL Commands Work</title>
    <para>cURL is a command-line tool that you can use to interact with Representational State Transfer (REST) interfaces.
        cURL lets you to transmit and receive HTTP requests and responses from the command line or a shell script, which
        enables you to work with the API directly. It is available for Linux distributions, Mac OS X, and Windows. For
        information about cURL, see <link xlink:href="http://curl.haxx.se/">http://curl.haxx.se/</link>. </para>

    <para>To run the cURL request examples shown in this guide, copy each example from the HTML version of this guide
        directly to the command line or a script.</para>

    <para>The following command is an example cURL command that updates an image:</para>

    <example xml:id="json_example">
        <title>cURL Command Example: JSON Request</title>
        <programlisting language="bash" role="gutter: false"><?db-font-size 60%?>
            <prompt>%</prompt> curl https://dfw.servers.api.rackspacecloud.com/v2/images/{image_id} \
       -X PATCH \
       -H "X-Auth-Token: $token" \
       -H "Content-Type: application/openstack-images-v2.1-json-patch" \
       -d '[{"op": "add", "path": "/login-user", "value": "root"}]' \
      | python -m json.tool</programlisting>
    </example>
    <note>
        <para>The carriage returns in the cURL request examples use a backslash (<literal>\</literal>) as an escape
            character. The escape character allows continuation of the command across multiple lines. However, do not include
            the escape character in the JSON or XML request body within the cURL command.</para>
    </note>
    <?hard-pagebreak?>
    <para>The cURL examples in this guide use the following command-line options:</para>
    <table xml:id="curl_options" rules="all" width="85%">
        <caption>cURL Command-Line Options</caption>

        <thead>
            <tr>
                <th>Option</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    <option>-d</option>
                </td>
                <td>
                    <para>Sends the specified data in a &POST; request to the HTTP server. Use this option to send a JSON or
                        XML request body to the server.</para>
                </td>
            </tr>
            <tr>
                <td>
                    <option>-H</option>
                </td>
                <td>
                    <para>Specifies an extra HTTP header in the request. You can specify any number of extra headers. Precede
                        each header with the <option>-H</option> option. </para>
                    <para>Common headers in Rackspace API requests are as follows:<itemizedlist>
                            <listitem>
                                <para><literal>Content-Type</literal>. Required for operations with a request body. </para>
                                <para>Specifies the format of the request body. Following is the syntax for the header where
                                        <parameter>format</parameter> is either <literal>json</literal> or
                                        <literal>xml</literal>.</para>
                                <screen><computeroutput>Content-Type: application/<parameter>format</parameter></computeroutput></screen>
                            </listitem>
                            <listitem>
                                <para><literal>X-Auth-Token</literal>. Required. Specifies the authentication token.</para>
                            </listitem>
                            <listitem>
                                <para><literal>Accept</literal>. Optional. </para>
                                <para>Specifies the format of the response body. Following is the syntax for the header where
                                        <parameter>format</parameter> is either <literal>json</literal> or
                                        <literal>xml</literal>. The default is <literal>json</literal>.</para>
                                <screen><computeroutput>Accept: application/<parameter>format</parameter></computeroutput></screen>
                            </listitem>
                        </itemizedlist></para>
                </td>
            </tr>
            <tr>
                <td>
                    <option>-i</option>
                </td>
                <td>
                    <para>Includes the HTTP header in the output. </para>
                </td>
            </tr>
            <tr>
                <td>
                    <option>-s</option>
                </td>
                <td>
                    <para>Specifies silent or quiet mode, which makes cURL mute. No progress or error messages are
                        shown.</para>
                </td>
            </tr>
            <tr>
                <td>
                    <option>-T</option>
                </td>
                <td>
                    <para>Transfers the specified local file to the remote URL.</para>
                </td>
            </tr>
            <tr>
                <td>
                    <option>-X</option>
                </td>
                <td>
                    <para>Specifies the request method to use when communicating with the HTTP server. The specified request
                        is used instead of the default method, which is &GET;. </para>
                </td>
            </tr>
        </tbody>
    </table>
    <note xml:id="json_tool">
        <para>For commands that return a response, you can append the following code to the command to call json.tool to
            pretty-print output: </para>
        <programlisting language="bash" role="gutter: false">| python -m json.tool</programlisting>
        <para>To use json.tool, import the json module. For information about json.tool, see
            <link xlink:href="http://docs.python.org/2/library/json.html">json — JSON encoder and decoder</link>. </para>
        <para>If you run a Python version older than 2.6, import the simplejson module and use simplejson.tool. For
            information about simplejson.tool, see
            <link xlink:href="http://simplejson.googlecode.com/svn/tags/simplejson-2.0.9/docs/index.html">simplejson — JSON encoder and decoder</link>.</para>
        <para>If you do not want to pretty-print JSON output, omit this code. </para>
    </note>
</section>
