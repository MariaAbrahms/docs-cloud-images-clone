<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE application [<!ENTITY % common  SYSTEM "../../common/common.ent">
%common;]>
	
<!-- if role="api-reference" on this chapter, generate table of all operations here -->
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
	xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="API_Operations" version="5.0" role="api-reference">
	<title>API Operations for Service Developers</title>
	<para>Service developers use the operations descried in this chapter to perform the following tasks: <itemizedlist>
			<listitem>
				<para>Manage <glossterm baseform="image">images</glossterm></para>
			</listitem>
			<listitem>
				<para>Create and manage <glossterm baseform="Image Member">image members</glossterm></para>
			</listitem>
			<listitem>
				<para>Create and manage <glossterm baseform="Image Tag">image tags</glossterm></para>
			</listitem>
			<listitem>
				<para>Manage <glossterm baseform="Image Task">image tasks</glossterm> like importing and exporting
					images</para>
			</listitem>
			<listitem>
				<para>Get information about image <glossterm baseform="Schema">schemas</glossterm></para>
			</listitem>
		</itemizedlist>
	</para>
	<note>
		<para>You must include your authentication token (see <olink targetdoc="ci-devguide" targetptr="auth">“Authenticate
				through the Rackspace Cloud Identity Service”</olink>) in the header of all &CImA; operation requests.</para>
	</note>

	<!-- Images -->
	<section xml:id="Image_Calls">
		<title>Image Operations</title>
		<para> Service developers use the operations described in this section to manage <glossterm baseform="image"
				>images</glossterm>. </para>
		<!--- this section comes from 1 WADL: image-2.0 -->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list images -->
			<wadl:resource href="../../wadl/image-2.0.wadl#Images">
				<wadl:method href="listImages"/>
			</wadl:resource>
			<!-- get image, update image, and delete image -->
			<wadl:resource href="../../wadl/image-2.0.wadl#ImageID">
				<wadl:method href="getImage"/>
				<wadl:method href="updateImage"/>
				<wadl:method href="deleteImage"/>
			</wadl:resource>
		</wadl:resources>
	</section>

	<!-- Image Members/Sharing -->
	<section xml:id="Image_Member_Calls">
		<title>Image Sharing Operations</title>
		<para>Service developers use the operations described in the following sections to manage <glossterm
				baseform="Image Member">image members</glossterm>. Please see <olink targetdoc="ci-devguide"
				targetptr="image-sharing">“Image Sharing”</olink> for more information about image sharing.</para>

		<section xml:id="Image_Both_Calls">
			<title>Image Operations for Both Producers and Consumers</title>
			<para> Service developers use the operations described in this section to list shared <glossterm
					baseform="Image Member">image members</glossterm>, regardless of whether the service developers are
				producers or consumers of the image members. </para>
			<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
				<!-- list image members -->
				<wadl:resource href="../../wadl/image-2.0.wadl#Members">
					<wadl:method href="listImageMembers"/>
				</wadl:resource>
				<!-- show image member details -->
				<wadl:resource href="../../wadl/image-2.0.wadl#MemberID">
					<wadl:method href="getImageMember"/>
				</wadl:resource>
			</wadl:resources>
		</section>

		<section xml:id="Image_Producer_Calls">
			<title>Image Operations for Producers</title>
			<para> Service developers use the operations described in this section to share image with users, or remove
				images from users, by creating or deleting <glossterm baseform="Image Member">image
				members</glossterm>.</para>
			<warning>
				<para>You are responsible for what you share with other cloud users. Consult the
					<link xlink:href="http://www.rackspace.com/information/legal/cloud/tos">Rackspace US Cloud Terms of Service</link>
					and
					<link xlink:href="http://www.rackspace.co.uk/legal/cloud-terms-of-service">Rackspace UK Cloud Terms of 
						Service</link>
					for details concerning the limitations on Rackspace support for non-standard software or operating system
					configurations, as well as your personal liabilities for sharing malicious software.</para>
			</warning>
			<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
				<!-- create image member -->
				<wadl:resource href="../../wadl/image-2.0.wadl#Members">
					<wadl:method href="createImageMember"/>
				</wadl:resource>
				<!-- delete image members -->
				<wadl:resource href="../../wadl/image-2.0.wadl#MemberID">
					<wadl:method href="deleteImageMember"/>
				</wadl:resource>
			</wadl:resources>
		</section>

		<section xml:id="Image_Consumer_Calls">
			<title>Image Operations for Consumers</title>
			<para> Service developers use the operations described in this section to update the status of a specified shared
				image for the <glossterm baseform="Image Member">image member</glossterm>. </para>
			<warning>
				<para>Before using a shared image, consider its source. It's a good idea to build critical infrastructure
					components using only images produced by people who have earned your trust. Further, as outlined in your
					<link xlink:href="http://www.rackspace.com/information/legal/cloud/tos">Rackspace Cloud Terms of Service</link>,
					support for a non-Rackspace image is on an AS IS basis.</para>
			</warning>
			<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
				<!-- update image members -->
				<wadl:resource href="../../wadl/image-2.0.wadl#MemberID">
					<wadl:method href="updateImageMember"/>
				</wadl:resource>
			</wadl:resources>
		</section>
	</section>

	<!-- Image Tags -->
	<section xml:id="Image_Tag_Calls">
		<title>Image Tag Operations</title>
		<para> Service developers use the operations described in this section to manage <glossterm baseform="Image Tag"
				>image tags</glossterm>. </para>
		<!-- add image tag, delete image tag -->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<wadl:resource href="../../wadl/image-2.0.wadl#Tagstag">
				<wadl:method href="addImageTag"/>
				<wadl:method href="deleteImageTag"/>
			</wadl:resource>
		</wadl:resources>
	</section>

	<!-- Image Tasks -->
	<section xml:id="Image_Task_Calls">
		<title>Image Task Operations</title>
		<para> Service developers use the operations described in this section to initiate and manage <glossterm
				baseform="Image Task">asynchronous image tasks</glossterm> like those created when importing and exporting
			images. For more information on tasks, see <olink targetdoc="ci-devguide" targetptr="image-tasks">“Image Tasks
				(Importing and Exporting Images)”</olink>.</para>
		<note>
			<para>The method and URI (<command>POST tasks</command>) used to create an asynchronous task is the same for both
				importing and export images. However, the operations are listed separately to reduce confusion. The desired
				end result, the request and response bodies, and the examples of the two operations are different.</para>
		</note>
		<!--- this section comes from 1 WADL: image-2.0 -->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list tasks -->
			<wadl:resource href="../../wadl/image-2.0.wadl#Tasks">
				<wadl:method href="listTasks"/>
			</wadl:resource>
			<!-- get task details -->
			<wadl:resource href="../../wadl/image-2.0.wadl#TaskID">
				<wadl:method href="getTask"/>
			</wadl:resource>
			<!-- import and export images (asynchronous tasks) -->
			<wadl:resource href="../../wadl/image-2.0.wadl#Tasks">
				<wadl:method href="importImage"/>
				<wadl:method href="exportImage"/>
			</wadl:resource>
		</wadl:resources>
	</section>

	<!-- Image Schemas -->
	<section xml:id="Schema_Calls">
		<title>JSON Schema Operations</title>
		<para>Service developers use the operations described in this section to get details about the images and members
				<glossterm baseform="Schema">schemas</glossterm>.</para>
		<warning>
			<para> The following schema operation responses are just an examples. Consider the response to your actual API
				call as authoritative. </para>
		</warning>
		<!--- this section comes from 1 WADL: image-schemas-2.0 -->
		<wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
			<!-- list image schemas -->
			<wadl:resource href="../../wadl/image-schemas-2.0.wadl#Image-schemas">
				<wadl:method href="getImagesSchema"/>
			</wadl:resource>
			<!-- list image schema details -->
			<wadl:resource href="../../wadl/image-schemas-2.0.wadl#Image-schema">
				<wadl:method href="getImageSchema"/>
			</wadl:resource>
			<!-- list images member schema -->
			<wadl:resource href="../../wadl/image-schemas-2.0.wadl#Image-members-schemas">
				<wadl:method href="getImageMembersSchemas"/>
			</wadl:resource>
			<!-- list image member schema -->
			<wadl:resource href="../../wadl/image-schemas-2.0.wadl#Image-member-schema">
				<wadl:method href="getImageMemberSchema"/>
			</wadl:resource>
			<!-- list tasks schema -->
			<wadl:resource href="../../wadl/image-schemas-2.0.wadl#Image-tasks-schemas">
				<wadl:method href="getTasksSchemas"/>
			</wadl:resource>
			<!-- list task schema -->
			<wadl:resource href="../../wadl/image-schemas-2.0.wadl#Image-task-schema">
				<wadl:method href="getTaskSchema"/>
			</wadl:resource>
		</wadl:resources>
	</section>


</chapter>
