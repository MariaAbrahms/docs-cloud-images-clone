<?xml version="1.0" encoding="UTF-8"?>
<!-- (C) 2012-2013 OpenStack Foundation, All Rights Reserved -->

<!--*******************************************************-->
<!--         Import Common XML Entities                    -->
<!--                                                       -->
<!--     You can resolve the entites with xmllint          -->
<!--                                                       -->
<!--        xmllint -noent os-image-2.0.wadl               -->
<!--*******************************************************-->
<!DOCTYPE application [<!ENTITY % common  SYSTEM "../common/common.ent">
<!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
%common;
]>


<application xmlns="http://wadl.dev.java.net/2009/02" xmlns:wadl="http://wadl.dev.java.net/2009/02"
    xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:imageapi="http://docs.openstack.org/image/api/v2.0" xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns:csapi="http://docs.openstack.org/compute/api/v2" xmlns:common="http://docs.openstack.org/common/api/v1.0">

    <grammars>
        <include href="../../src/common/xsd/api.xsd"/>
        <include href="../../src/common/xsd/api-common.xsd"/>
        <include href="../../src/common/xsd/fault.xsd"/>
    </grammars>

    <!--*******************************************************-->
    <!--             All Resources                             -->
    <!--*******************************************************-->
    <resources base="https://glance.example.com/">
        <resource id="info" path="v2">
            <resource id="Images" path="images">
                <method href="#createImage"/>
                <resource id="ImageID" path="{image_id}">
                    <param name="image_id" style="template" type="csapi:uuid">
                        <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image ID">
                            <p>Image ID stored through the image API, typically a UUID.</p>
                        </wadl:doc>
                    </param>
                    <method href="#getImage"/>
                    <method href="#updateImage"/>
                    <method href="#deleteImage"/>
                    <method href="#listImages"/>
                    <resource id="file" path="file">
                        <method href="#storeImageFile"/>
                        <method href="#getImageFile"/>
                    </resource>
                    <resource id="Tags" path="tags">
                        <resource id="Tagstag" path="{tag}">
                            <param name="tag" style="template" type="xsd:string">
                                <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Tag">
                                    <p>Image tag.</p>
                                </wadl:doc>
                            </param>
                            <method href="#addImageTag"/>
                            <method href="#deleteImageTag"/>
                        </resource>
                    </resource>
                </resource>
            </resource>
        </resource>
    </resources>


    <!--*******************************************************-->
    <!--               All Methods                             -->
    <!--*******************************************************-->

    <!--Create Image -->
    <method name="POST" id="createImage">
        <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook" title="Create Image">
            <para role="shortdesc">Creates a virtual machine (VM) image. </para>
            <para>Need to add more a of a description?</para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="image">
                <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code href="../common/samples/image-create-req.json"/>
                    </xsdxt:sample>
                </doc>
                <param name="name" style="plain" type="xsd:string" required="true">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Images name">
                        <p>Name for the image. The name of an image is not unique to an image node, because the API does not
                            expect users to know the names of images owned by others.</p>
                    </wadl:doc>
                </param>
                <param name="id" style="plain" type="csapi:uuid" required="false">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image ID">
                        <p>The image ID.</p>
                    </wadl:doc>
                </param>
                <param name="visibility" style="plain" type="xsd:string" required="false">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Visibility">
                        <p>Image visibility. Valid values are <code>public</code> or <code>private</code>. The default is
                                <code>public</code>.</p>
                    </wadl:doc>
                </param>
                <param name="tags" style="plain" type="xsd:dict" required="false">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Tags">
                        <p>Image tags.</p>
                    </wadl:doc>
                </param>
            </representation>
        </request>
        <response status="201">
            <representation mediaType="application/json">
                <wadl:doc xmlns="http://docbook.org/ns/docbook" xml:lang="EN">
                    <para> The response is created with a Location header that contains the newly created URI for the image.
                        The response body represents the created image entity. </para>
                    <xsdxt:sample>
                        <xsdxt:code href="../common/samples/image-create-response.json"/>
                    </xsdxt:sample>
                </wadl:doc>
                <param name="location" style="plain" type="xsd:anyURI" required="true">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image Location">
                        <p>The location for the image identified by a URI. </p>
                    </wadl:doc>
                </param>
            </representation>
        </response> &commonFaults; &postPutFaults; </method>

    <!-- Update Image -->
    <method name="PATCH" id="updateImage">
        <wadl:doc xml:lang="EN" title="Update Image" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Updates the specified image. </para>
            <para>The request body must conform to the <code>application/openstack-images-v2.0-json-patch</code> media
                type.</para>
            <para>You can also use the <code>PATCH</code> method to add or remove image properties. </para>
        </wadl:doc>
        <request>
            <representation mediaType="application/json" element="image">
                <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code href="../common/samples/image-update-req.json"/>
                    </xsdxt:sample>
                </doc>
                <param name="name" style="plain" type="xsd:string" required="true">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Images name">
                        <p>Name for the image. The name of an image is not unique to a Cloud Images node. The API cannot
                            expect users to know the names of images owned by others.</p>
                    </wadl:doc>
                </param>
                <param name="id" style="plain" type="csapi:uuid" required="false">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Image ID">
                        <p>The image ID.</p>
                    </wadl:doc>
                </param>
                <param name="visibility" style="plain" type="xsd:string" required="false">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Visibility">
                        <p>Image visibility. Valid values are <code>public</code> and <code>private</code>. The default is
                                <code>public</code>.</p>
                    </wadl:doc>
                </param>
                <param name="tags" style="plain" type="xsd:dict" required="false">
                    <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Tags">
                        <p>Image tags.</p>
                    </wadl:doc>
                </param>
            </representation>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code href="../common/samples/image-details-response.json"/>
                    </xsdxt:sample>
                </doc>
            </representation>
        </response> &commonFaults; &postPutFaults; </method>

    <!-- Get Image -->
    <method name="GET" id="getImage">
        <wadl:doc xml:lang="EN" title="Get Image Details" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Gets the details for the specified image. </para>
            <para>The response body is a single image entity.</para>
        </wadl:doc>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code href="../common/samples/image-details-response.json"/>
                    </xsdxt:sample>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

    <!-- List Images -->
    <method name="GET" id="listImages">
        <wadl:doc xml:lang="EN" title="List Images" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Lists public virtual machine (VM) images.</para>
            <para>This operation returns a subset of the larger collection of images and a link that you can use to get the
                next set of images. You should always check for the presence of a <parameter>next</parameter> link and use it
                as the URI in a subsequent <code>HTTP GET</code> request. Follow this pattern until a <parameter>next</parameter> link is
                no longer provided. The next link preserves any query parameters that you send in your initial request. You
                can use the <parameter>first</parameter> link to jump back to the first page of the collection. If you prefer
                to paginate through images manually, use the <parameter>limit</parameter> and <parameter>marker</parameter>
                parameters. </para>
            <para>The List Images operation accepts several types of query parameters that you can use to filter the results
                of the returned collection. </para>
            <para>A client can provide direct comparison filters by using most image attributes, such as
                    <code>name=Ubuntu</code>, <code>visibility=public</code>, and so on. A client cannot filter on tags or
                anything defined as a link in the json-schema, such as <parameter>self</parameter>,
                    <parameter>file</parameter>, or <parameter>schema</parameter>. </para>
            <para>You can use the <parameter>size_min</parameter> and <parameter>size_max</parameter> query parameters to
                perform greater-than and less-than filtering of images based on their <parameter>size</parameter> attribute.
                The size is measured in bytes and refers to the size of an image when it is stored on disk.</para>
            <para>For example, sending a <parameter>size_min</parameter> filter of 1048576 and size_max of 4194304 filters
                the container to include only images that are between 1 MB and 4 MB in size.</para>
            <para>You can sort the results of this operation by using the <parameter>sort_key</parameter> and
                    <parameter>sort_dir</parameter> parameters. The API uses the natural sorting of whatever image attribute
                is provided as the <parameter>sort_key</parameter>. </para>
        </wadl:doc>
        <request>
            <param name="limit" style="query" required="false" type="xsd:string">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Requests a specific page size. Expect a response to a limited request to return between zero items
                        and the number specified. The typical pattern for using the <parameter>limit</parameter> and
                            <parameter>marker</parameter> parameters is to make an initial limited request and then to use
                        the ID of the last image from the response as the <parameter>marker</parameter> parameter in a
                        subsequent limited request.</para>
                </wadl:doc>
            </param>
            <param name="marker" style="query" required="false" type="xsd:string">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Specifies the ID of the last-seen image. The typical pattern for using the
                            <parameter>limit</parameter> and <parameter>marker</parameter> parameters is to make an initial
                        limited request and then to use the ID of the last image from the response as the
                            <parameter>marker</parameter> parameter in a subsequent limited request.</para>
                </wadl:doc>
            </param>
            <param name="name" style="query" required="false" type="xsd:string">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter that specifies the name of the image as a string.</para>
                </wadl:doc>
            </param>
            <param name="visibility" style="query" required="false" type="imageapi:string">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter that specifies image visibility as either <code>public</code> or
                            <code>private</code>.</para>
                </wadl:doc>
            </param>
            <param name="status" style="query" required="false" type="xsd:int">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter that species the image status as <code>queued</code>, <code>saving</code>,
                            <code>active</code>, <code>killed</code>, <code>deleted</code>, or
                        <code>pending_delete</code>.</para>
                </wadl:doc>
            </param>
            <param name="size_min" style="query" required="false" type="xsd:string" default="ALL">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter that specifies the minimum size of the image in bytes.</para>
                </wadl:doc>
            </param>
            <param name="size_max" style="query" required="false" type="xsd:string" default="ALL">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Filter parameter that specifies the maximum size of the image in bytes.</para>
                </wadl:doc>
            </param>
            <param name="sort_key" style="query" required="false" type="xsd:string" default="ALL">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Sort key. All image attributes can be used as the sort key, except <code>tags</code> and
                            <code>link</code> attributes. The default is <code>created_at</code>.</para>
                </wadl:doc>
            </param>
            <param name="sort_dir" style="query" required="false" type="xsd:string" default="ALL">
                <wadl:doc xml:lang="EN" xmlns="http://docbook.org/ns/docbook">
                    <para>Sort direction. Valid values are <code>asc</code> (ascending) and <code>desc</code> (descending).
                        The default is <code>desc</code>.</para>
                </wadl:doc>
            </param>
        </request>
        <response status="200">
            <representation mediaType="application/json">
                <doc xml:lang="EN">
                    <xsdxt:sample>
                        <xsdxt:code href="../common/samples/image-list-response.json"/>
                    </xsdxt:sample>
                </doc>
            </representation>
        </response> &commonFaults; &getFaults; </method>

    <!-- Delete Image -->
    <method name="DELETE" id="deleteImage">
        <wadl:doc xml:lang="EN" title="Delete Image" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes the specified image. </para>
            <para>Make sure the <parameter>protected</parameter> attribute is set to false (Boolean) before performing the
                delete. The successful response is empty and returns the <errorcode>HTTP 204</errorcode> status code. </para>
            <warning><para>An attempt to delete an image with the <parameter>protected</parameter> attribute set to
                        <code>true</code> (boolean) will result in a response code <errorcode>HTTP 403</errorcode></para>
            </warning>
        </wadl:doc>
        <response status="204"/> &commonFaults; </method>

    <!-- Upload Image -->
    <method name="PUT" id="storeImageFile">
        <wadl:doc xml:lang="EN" title="Upload Binary Image Data" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Uploads binary image data. </para>
            <para>An image record must exist before a client can store binary image data with it. </para>
            <para>Content-Type must be <code>application/octet-stream</code>. The complete request body is stored and is
                accessible in its entirety by issuing a GET request to the same URI. </para>
        </wadl:doc>
        <response status="204"/> &commonFaults; &postPutFaults; </method>

    <!-- Download Image -->
    <method name="GET" id="getImageFile">
        <wadl:doc xml:lang="EN" title="Download Binary Image Data" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Downloads binary image data.</para>
            <para>The response body contains the raw binary data that represents the actual virtual disk. The Content-Type
                header is <code>application/octet-stream</code>. The Content-MD5 header contains an MD5 checksum of the image
                data. Clients are encouraged to verify the integrity of the image data that they receive by using this
                checksum.</para>
        </wadl:doc>
        <response status="200">
            <wadl:doc xmlns="http://docbook.org/ns/docbook">
                <para>If no image data exists, the response returns <errorcode>HTTP 204</errorcode> status code.</para>
            </wadl:doc>
        </response>&commonFaults; &getFaults; </method>

    <!-- Add Image Tag -->
    <method name="PUT" id="addImageTag">
        <wadl:doc xmlns="http://www.w3.org/1999/xhtml" xml:lang="EN" title="Add Image Tag">
            <p xmlns="http://www.w3.org/1999/xhtml">Adds the specified tag to the specified image. </p>
        </wadl:doc>
        <response status="200"/> &commonFaults; &postPutFaults; </method>

    <!-- Delete Image Tag -->
    <method name="DELETE" id="deleteImageTag">
        <wadl:doc xml:lang="EN" title="Delete Image Tag" xmlns="http://docbook.org/ns/docbook">
            <para role="shortdesc">Deletes the specified tag from the specified image. </para>
        </wadl:doc>
        <response status="204"/> &commonFaults; </method>
</application>
